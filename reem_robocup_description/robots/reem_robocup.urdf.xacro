<?xml version="1.0"?>
<!--

  Copyright (c) 2012, PAL Robotics, S.L.
  All rights reserved.

  This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/3.0/ or send a letter to
  Creative Commons, 444 Castro Street, Suite 900, Mountain View, California, 94041, USA.
-->
<robot  xmlns:xacro="http://www.ros.org/wiki/xacro"
        xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
        xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
        xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
        name="reem_robocup" >

  <!-- The following included files set up definitions of parts of the robot body -->

  <!-- Base -->
  <include filename="$(find reem_description)/urdf/base/base.urdf.xacro" />
  <!-- Torso -->
  <include filename="$(find reem_description)/urdf/torso/torso.urdf.xacro" />
  <!-- Head -->
  <include filename="$(find reem_description)/urdf/head/head.urdf.xacro" />
  <!-- Arm -->
  <include filename="$(find reem_description)/urdf/arm/arm.urdf.xacro" />
  <!-- Hand -->
  <include filename="$(find reem_robocup_description)/urdf/hand/hand.urdf.xacro" />
  <!-- Camera sensors -->
  <include filename="$(find reem_description)/urdf/sensors/stereo_camera.urdf.xacro" />
  <!-- Kinect -->
  <include filename="$(find reem_description)/urdf/sensors/kinect.urdf.xacro" />

  <!-- Generic simulator_gazebo plugins -->
  <include filename="$(find reem_description)/gazebo/gazebo.urdf.xacro" />
  <!-- Materials for visualization -->
  <include filename="$(find reem_description)/urdf/materials.urdf.xacro" />

  <!-- Now we can start using the macros included above to define the actual robot -->
  <xacro:reem_base  name="base"/>
  <xacro:reem_cargo  name="base"/>
  <xacro:reem_torso name="torso" parent="base_link"/>
  <xacro:reem_head  name="head"  parent="torso_2_link"/>

   This is a common convention, to use a reflect parameter that equals +-1 to distinguish left from right
  <xacro:reem_arm name="arm" side="right" reflect="1.0" />
  <xacro:reem_arm name="arm" side="left"  reflect="-1.0" />

  <xacro:rh1_hand name="hand" side="right" reflect="1.0" />
  <xacro:rh1_hand name="hand" side="left"  reflect="-1.0" />
  <!-- stereo camera -->
  <!-- IMPORTANT: focal_length = image_width/(2tan(hfov/2)) -->
  <xacro:stereo_camera_v0 parent="head_2_link" name="stereo" focal_length="357.95" hfov="85" image_format="B8G8R8" image_width="656" image_height="492" > 
    <!-- The following transformations expresses the pose of the stereo_link (X pointing forward, Z upwards and Y leftwards, contrary to the stereo_optical_link which has Z pointing forward) wrt  head_2_link. -->
    <origin xyz="0.08203  -0.09558  0.04132" rpy="1.56293 -0.00855922 -0.0201307" />
  </xacro:stereo_camera_v0>

  <!-- kinect camera -->
  <xacro:kinect_v0 parent="head_2_link" name="kinect"> 
     <origin xyz="0.0 0.0 0.45" rpy="0.0 0.0 0.0" />
  </xacro:kinect_v0>

</robot>


